'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.8941
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.3038.
'

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Web.Services.WebServiceBindingAttribute(Name:="IWSDLPublishbinding", [Namespace]:="http://tempuri.org/")>  _
Partial Public Class IWSDLPublishservice
    Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
    
    Private GetPortTypeListOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GetWSDLForPortTypeOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GetTypeSystemsListOperationCompleted As System.Threading.SendOrPostCallback
    
    Private GetXSDForTypeSystemOperationCompleted As System.Threading.SendOrPostCallback
    
    '''<remarks/>
    Public Sub New()
        MyBase.New
        Me.Url = "http://upc50-7.upc.com.mx:8080/soap/IWSDLPublish"
    End Sub
    
    '''<remarks/>
    Public Event GetPortTypeListCompleted As GetPortTypeListCompletedEventHandler
    
    '''<remarks/>
    Public Event GetWSDLForPortTypeCompleted As GetWSDLForPortTypeCompletedEventHandler
    
    '''<remarks/>
    Public Event GetTypeSystemsListCompleted As GetTypeSystemsListCompletedEventHandler
    
    '''<remarks/>
    Public Event GetXSDForTypeSystemCompleted As GetXSDForTypeSystemCompletedEventHandler
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.borland.com/namespaces/Types-IWSDLPublish", RequestNamespace:="http://www.borland.com/namespaces/Types", ResponseNamespace:="http://www.borland.com/namespaces/Types")>  _
    Public Function GetPortTypeList() As <System.Xml.Serialization.SoapElementAttribute("return")> String()
        Dim results() As Object = Me.Invoke("GetPortTypeList", New Object(-1) {})
        Return CType(results(0),String())
    End Function
    
    '''<remarks/>
    Public Function BeginGetPortTypeList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetPortTypeList", New Object(-1) {}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGetPortTypeList(ByVal asyncResult As System.IAsyncResult) As String()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String())
    End Function
    
    '''<remarks/>
    Public Overloads Sub GetPortTypeListAsync()
        Me.GetPortTypeListAsync(Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GetPortTypeListAsync(ByVal userState As Object)
        If (Me.GetPortTypeListOperationCompleted Is Nothing) Then
            Me.GetPortTypeListOperationCompleted = AddressOf Me.OnGetPortTypeListOperationCompleted
        End If
        Me.InvokeAsync("GetPortTypeList", New Object(-1) {}, Me.GetPortTypeListOperationCompleted, userState)
    End Sub
    
    Private Sub OnGetPortTypeListOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetPortTypeListCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetPortTypeListCompleted(Me, New GetPortTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.borland.com/namespaces/Types-IWSDLPublish", RequestNamespace:="http://www.borland.com/namespaces/Types", ResponseNamespace:="http://www.borland.com/namespaces/Types")>  _
    Public Function GetWSDLForPortType(ByVal PortType As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String
        Dim results() As Object = Me.Invoke("GetWSDLForPortType", New Object() {PortType})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginGetWSDLForPortType(ByVal PortType As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetWSDLForPortType", New Object() {PortType}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGetWSDLForPortType(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub GetWSDLForPortTypeAsync(ByVal PortType As String)
        Me.GetWSDLForPortTypeAsync(PortType, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GetWSDLForPortTypeAsync(ByVal PortType As String, ByVal userState As Object)
        If (Me.GetWSDLForPortTypeOperationCompleted Is Nothing) Then
            Me.GetWSDLForPortTypeOperationCompleted = AddressOf Me.OnGetWSDLForPortTypeOperationCompleted
        End If
        Me.InvokeAsync("GetWSDLForPortType", New Object() {PortType}, Me.GetWSDLForPortTypeOperationCompleted, userState)
    End Sub
    
    Private Sub OnGetWSDLForPortTypeOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetWSDLForPortTypeCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetWSDLForPortTypeCompleted(Me, New GetWSDLForPortTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.borland.com/namespaces/Types-IWSDLPublish", RequestNamespace:="http://www.borland.com/namespaces/Types", ResponseNamespace:="http://www.borland.com/namespaces/Types")>  _
    Public Function GetTypeSystemsList() As <System.Xml.Serialization.SoapElementAttribute("return")> String()
        Dim results() As Object = Me.Invoke("GetTypeSystemsList", New Object(-1) {})
        Return CType(results(0),String())
    End Function
    
    '''<remarks/>
    Public Function BeginGetTypeSystemsList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetTypeSystemsList", New Object(-1) {}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGetTypeSystemsList(ByVal asyncResult As System.IAsyncResult) As String()
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String())
    End Function
    
    '''<remarks/>
    Public Overloads Sub GetTypeSystemsListAsync()
        Me.GetTypeSystemsListAsync(Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GetTypeSystemsListAsync(ByVal userState As Object)
        If (Me.GetTypeSystemsListOperationCompleted Is Nothing) Then
            Me.GetTypeSystemsListOperationCompleted = AddressOf Me.OnGetTypeSystemsListOperationCompleted
        End If
        Me.InvokeAsync("GetTypeSystemsList", New Object(-1) {}, Me.GetTypeSystemsListOperationCompleted, userState)
    End Sub
    
    Private Sub OnGetTypeSystemsListOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetTypeSystemsListCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetTypeSystemsListCompleted(Me, New GetTypeSystemsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.borland.com/namespaces/Types-IWSDLPublish", RequestNamespace:="http://www.borland.com/namespaces/Types", ResponseNamespace:="http://www.borland.com/namespaces/Types")>  _
    Public Function GetXSDForTypeSystem(ByVal TypeSystem As String) As <System.Xml.Serialization.SoapElementAttribute("return")> String
        Dim results() As Object = Me.Invoke("GetXSDForTypeSystem", New Object() {TypeSystem})
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Function BeginGetXSDForTypeSystem(ByVal TypeSystem As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("GetXSDForTypeSystem", New Object() {TypeSystem}, callback, asyncState)
    End Function
    
    '''<remarks/>
    Public Function EndGetXSDForTypeSystem(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0),String)
    End Function
    
    '''<remarks/>
    Public Overloads Sub GetXSDForTypeSystemAsync(ByVal TypeSystem As String)
        Me.GetXSDForTypeSystemAsync(TypeSystem, Nothing)
    End Sub
    
    '''<remarks/>
    Public Overloads Sub GetXSDForTypeSystemAsync(ByVal TypeSystem As String, ByVal userState As Object)
        If (Me.GetXSDForTypeSystemOperationCompleted Is Nothing) Then
            Me.GetXSDForTypeSystemOperationCompleted = AddressOf Me.OnGetXSDForTypeSystemOperationCompleted
        End If
        Me.InvokeAsync("GetXSDForTypeSystem", New Object() {TypeSystem}, Me.GetXSDForTypeSystemOperationCompleted, userState)
    End Sub
    
    Private Sub OnGetXSDForTypeSystemOperationCompleted(ByVal arg As Object)
        If (Not (Me.GetXSDForTypeSystemCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent GetXSDForTypeSystemCompleted(Me, New GetXSDForTypeSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub
    
    '''<remarks/>
    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub GetPortTypeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetPortTypeListCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GetPortTypeListCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub GetWSDLForPortTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetWSDLForPortTypeCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GetWSDLForPortTypeCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub GetTypeSystemsListCompletedEventHandler(ByVal sender As Object, ByVal e As GetTypeSystemsListCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GetTypeSystemsListCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String()
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String())
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")>  _
Public Delegate Sub GetXSDForTypeSystemCompletedEventHandler(ByVal sender As Object, ByVal e As GetXSDForTypeSystemCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class GetXSDForTypeSystemCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class
